"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.configOptions = exports.reportingOptions = exports.testsOptions = exports.credentialsOptions = void 0;

var _fs = _interopRequireDefault(require("fs"));

var _defaults = require("../common/defaults");

var _env = require("../common/env");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var reportingDocLink = 'https://developers.perfectomobile.com/display/PD/Download+the+Reporting+SDK';
var cypressDocLink = ''; // TODO: (Elhay) Add a documentation link

var reportingGroupName = 'Reporting options (will override config file) ' + reportingDocLink;
var credentialsGroupName = 'Credentials options (will override config file)';
var testGroupName = 'Test options (will override config file)';
var credentialsOptions = {
  'credentials.cloud': {
    alias: 'cloud',
    type: 'string',
    describe: 'Cloud name',
    group: credentialsGroupName
  },
  'credentials.securityToken': {
    alias: 'token',
    type: 'string',
    describe: 'Offline token',
    default: (0, _env.getSecurityToken)(),
    group: credentialsGroupName
  }
};
exports.credentialsOptions = credentialsOptions;
var testsOptions = {
  'tests.artifactKey': {
    alias: 'ta',
    type: 'string',
    describe: 'Repository artifact key',
    group: testGroupName
  },
  'tests.path': {
    alias: 'tp',
    type: 'string',
    describe: 'Root path for test to pack',
    group: testGroupName
  },
  'tests.ignore': {
    alias: 'ti',
    describe: 'ignore files list',
    array: true,
    group: testGroupName
  },
  'tests.specsExt': {
    alias: 'ts',
    default: _defaults.DEFAULT_TESTS_SPECS_EXT,
    describe: 'specs files extension',
    type: 'string',
    group: testGroupName
  }
};
exports.testsOptions = testsOptions;
var reportingOptions = {
  'reporting.job.name': {
    alias: 'rjn',
    type: 'string',
    describe: 'reporting job name',
    group: reportingGroupName
  },
  'reporting.job.number': {
    alias: 'rjNum',
    type: 'number',
    describe: 'reporting job number',
    group: reportingGroupName
  },
  'reporting.job.branch': {
    alias: 'rb',
    type: 'string',
    describe: 'reporting branch',
    group: reportingGroupName
  },
  'reporting.project.name': {
    alias: 'rpn',
    type: 'string',
    describe: 'reporting project name',
    group: reportingGroupName
  },
  'reporting.project.version': {
    alias: 'rpv',
    type: 'string',
    describe: 'reporting project version',
    group: reportingGroupName
  },
  'reporting.author': {
    alias: 'ra',
    type: 'string',
    describe: 'reporting author',
    group: reportingGroupName
  },
  'reporting.tags': {
    alias: 'rt',
    describe: 'reporting tags, example: tag1 tag2',
    array: true,
    group: reportingGroupName
  },
  'reporting.customFields': {
    alias: 'rcf',
    describe: 'reporting custom fields, example: key1,value1 key2,value2',
    array: true,
    group: reportingGroupName
  }
};
exports.reportingOptions = reportingOptions;
var configOptions = {
  config: {
    alias: 'c',
    config: true,
    describe: 'Path to config file, see documentation: ' + cypressDocLink,
    default: (0, _env.getConfigPath)() || _defaults.DEFAULT_CONFIG_PATH,
    // global: true,
    coerce: configPath => {
      return JSON.parse(_fs.default.readFileSync(configPath, 'utf-8'));
    }
  }
};
exports.configOptions = configOptions;